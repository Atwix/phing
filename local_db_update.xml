<?xml version="1.0" ?>
<project name="atwix local db update" basedir="." default="build">
<property name="version" value="1.0" />
<property file="build.properties" />
<property name="privkeyfile" value="/home/jenkins/.ssh/id_rsa" /> 
<property name="pubkeyfile" value="/home/jenkins/.ssh/id_rsa.pub" /> 
<property name="remote.n98.path" value="${sync.destination.projectdir}/var/n98" />
<property name="dump.parameters" value="@sales @customers @stripped" />
<property name="dump.filename" value="dev_dump.sql" />
<property name="local.db.name" value="test" />

<target name="remote-dump">
  <echo message="Connecting ${sync.remote.user}@${sync.remote.host}" />
  <ssh username="${sync.remote.user}" 
  host="${sync.remote.host}" 
  pubkeyfile="${pubkeyfile}"
  privkeyfile="${privkeyfile}"
  display="false"
  command="cd ${sync.destination.projectdir}/var/n98 2>&amp;1" 
  property="cd.output" />
  <if>
    <contains string="${cd.output}" substring="No such file" />
    <then>
      <phingcall target="-upload-n98" />
    </then>
  </if>
  <phingcall target="-execute-n98" />
  <phingcall target="-gzip-dump" />
  <phingcall target="-download-dump" />
  <phingcall target="-remove-dump" />
</target>

<target name="-upload-n98">
  <echo message="Uploading n98-magerun.phar to the server" />
  <scp username="${sync.remote.user}"
  host="${sync.remote.host}"
  pubkeyfile="${pubkeyfile}"
  privkeyfile="${privkeyfile}"
  todir="${remote.n98.path}"
  file="../../system/n98/n98-magerun.phar" />
</target>

<target name="-execute-n98">
  <echo message="Executing n98-magerun.phar database dump with parameters: ${dump.parameters}" />
  <ssh username="${sync.remote.user}" 
  host="${sync.remote.host}" 
  pubkeyfile="${pubkeyfile}"
  privkeyfile="${privkeyfile}"
  display="false"
  command="cd ${sync.destination.projectdir}/var/n98/ ; rm -f *.sql ; ./n98-magerun.phar db:dump -f --strip='${dump.parameters}' ${dump.filename} 2>&amp;1" 
  property="n98.output" />
  <echo message="${n98.output}" />
</target>

<target name="-gzip-dump" >
  <echo message="Gzipping current dump" />
  <ssh username="${sync.remote.user}" 
  host="${sync.remote.host}" 
  pubkeyfile="${pubkeyfile}"
  privkeyfile="${privkeyfile}"
  display="false"
  command="cd ${sync.destination.projectdir}/var/n98/ ; gzip -9 -f ${dump.filename} 2>&amp;1" 
  property="n98.output" />
</target>

<target name="-download-dump">
  <echo message="Downloading dump to the local server" />
  <exec command="mkdir dumps" dir="." />
  <scp username="${sync.remote.user}"
  host="${sync.remote.host}"
  pubkeyfile="${pubkeyfile}"
  privkeyfile="${privkeyfile}"
  fetch="true"
  todir="dumps"
  file="${remote.n98.path}/${dump.filename}.gz">
  </scp>
</target>

<target name="-remove-dump">
  <ssh username="${sync.remote.user}" 
  host="${sync.remote.host}" 
  pubkeyfile="${pubkeyfile}"
  privkeyfile="${privkeyfile}"
  display="false"
  command="cd ${remote.n98.path} ; rm -f ${dump.filename}.gz ; rm -f ${dump.filename} 2>&amp;1" 
  property="remove.output" />
  <echo message="${remove.output}" />
</target>

<target name="-create-local-db"> 
  <if>
    <equals arg1="" arg2="${local.db.name}" />
    <then>
      <fail message="Error: No local database name was set" />
    </then>
  </if>
  <exec command="echo 'DROP DATABASE ${local.db.name};' > tmp" passthru="true" />
  <exec command="mysql -u ${sync.local.db.user} -p${sync.local.db.password} &lt; tmp"  outputProperty="sql.output"/>
  <echo message="${sql.output}" />
  <exec command="echo 'CREATE DATABASE ${local.db.name};' > tmp" passthru="true"/>
  <exec command="mysql -u ${sync.local.db.user} -p${sync.local.db.password} &lt; tmp"  outputProperty="sql.output"/>
  <exec command="rm -f tmp" /> 
  <if>
    <contains string="${sql.output}" substring="ERROR" />
    <then>
      <fail message="${sql.output}" />
    </then>
  </if>
</target>

<target name="-unzip-local-dump">
  <exec command="cd dumps; gunzip ${dump.filename}.gz" passthru="true" />
</target>

<target name="-import-local-dump">
  <exec command="cd dumps; mysql -u ${sync.local.db.user} -p${sync.local.db.password} ${local.db.name} &lt; ${dump.filename}" outputProperty="sql.output" />
  <if>
    <or>
      <contains string="${sql.output}" substring="ERROR" />
      <contains string="${sql.output}" substring="cannot" />
   </or>
   <then>
     <fail message="${sql.output}" />
   </then>
  </if>
  <echo message="${sql.output}" />
</target>

<target name="-remove-local-dump">
  <exec command="cd dumps; rm ${dump.filename}" passthru="true" />
</target>
</project>
